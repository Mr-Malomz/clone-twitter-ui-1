model User {
    fields {
        identity Identity @unique
        username Text @unique
        name Text?
        tweets Tweet[]
    }

    actions {
        create createUser() with (name, username) {
            @set(user.identity = ctx.identity)
            @permission(expression: ctx.isAuthenticated)
        }
        get getUser() {
            @where(user.identity == ctx.identity)
            @permission(expression: ctx.isAuthenticated)
        }
    }
}

model Tweet {
    fields {
        content Text
        user User
    }

    actions {
        create newTweet() with (content, user.username) {
            @set(tweet.user.identity = ctx.identity)
        }
        update updateTweet(id) with (content) {
            @permission(expression: tweet.user.identity == ctx.identity)
        }
        delete deleteTweet(id) {
            @permission(expression: tweet.user.identity == ctx.identity)
        }
        list listTweets() {
            @orderBy(createdAt: desc)
        }
    }

    @permission(
        expression: ctx.isAuthenticated,
        actions: [create, list]
    )
}
